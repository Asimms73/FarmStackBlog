[{"/Users/austo/Desktop/Creative/Web Development/FarmStackProject/frontend/src/index.js":"1","/Users/austo/Desktop/Creative/Web Development/FarmStackProject/frontend/src/App.js":"2","/Users/austo/Desktop/Creative/Web Development/FarmStackProject/frontend/src/Navbar.js":"3","/Users/austo/Desktop/Creative/Web Development/FarmStackProject/frontend/src/Home.js":"4","/Users/austo/Desktop/Creative/Web Development/FarmStackProject/frontend/src/BlogList.js":"5","/Users/austo/Desktop/Creative/Web Development/FarmStackProject/frontend/src/useFetch.js":"6","/Users/austo/Desktop/Creative/Web Development/FarmStackProject/frontend/src/CreateBlog.js":"7","/Users/austo/Desktop/Creative/Web Development/FarmStackProject/frontend/src/BlogDetails.js":"8"},{"size":303,"mtime":1682899818429,"results":"9","hashOfConfig":"10"},{"size":678,"mtime":1683262609058,"results":"11","hashOfConfig":"10"},{"size":357,"mtime":1683313210029,"results":"12","hashOfConfig":"10"},{"size":342,"mtime":1683177202982,"results":"13","hashOfConfig":"10"},{"size":547,"mtime":1683312874712,"results":"14","hashOfConfig":"10"},{"size":783,"mtime":1682975357998,"results":"15","hashOfConfig":"10"},{"size":1774,"mtime":1683309649205,"results":"16","hashOfConfig":"10"},{"size":680,"mtime":1683313175093,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"5pkvdn",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"21"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},"/Users/austo/Desktop/Creative/Web Development/FarmStackProject/frontend/src/index.js",[],[],[],"/Users/austo/Desktop/Creative/Web Development/FarmStackProject/frontend/src/App.js",[],[],"/Users/austo/Desktop/Creative/Web Development/FarmStackProject/frontend/src/Navbar.js",[],[],"/Users/austo/Desktop/Creative/Web Development/FarmStackProject/frontend/src/Home.js",["47","48"],[],"import BlogList from \"./BlogList\";\nimport useFetch from \"./useFetch\";\n\nconst Home = () => {\n\n    const { error, isPending, data: blogs } = useFetch('http://localhost:8000/api/blog');\n\n    return (\n        <div className=\"home\">\n            { blogs && <BlogList blogs={blogs} title='All Blogs'/>}\n        </div>\n    );\n}\n \nexport default Home;","/Users/austo/Desktop/Creative/Web Development/FarmStackProject/frontend/src/BlogList.js",["49"],[],"import { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst BlogList = ({ blogs, title }) => {\n    \n\n\n\n    return (\n      <div className=\"blog-list\">\n        <h2>{title}</h2>\n        {blogs.map(blog => (\n          <Link to={`/blogs/${blog.id}`}\n          style={{ textDecoration: 'none' }}>\n            <div className=\"blog-preview\" key={blog.id} >\n              <h2>{ blog.title }</h2>\n              <p>Written by Anonymous</p>\n            </div>\n          </Link>\n        ))}\n      </div>\n    );\n  }\n   \n  export default BlogList;","/Users/austo/Desktop/Creative/Web Development/FarmStackProject/frontend/src/useFetch.js",[],[],"/Users/austo/Desktop/Creative/Web Development/FarmStackProject/frontend/src/CreateBlog.js",["50","51"],[],"import axios from \"axios\";\nimport { useState } from \"react\";\nimport useFetch from \"./useFetch\";\nimport { useNavigate } from 'react-router-dom';\n\n\n\nconst CreateBlog = () => {\n    const [title, setTitle] = useState('');\n    const [body, setBody] = useState('');\n    const [id, setId] = useState(0);\n    const { data: blogs } =  useFetch('http://localhost:8000/api/blog');\n    const [submitCount, setSubmitCount] = useState(0);\n\n    const navigate = useNavigate();\n\n\n\n    const handleSubmit = (e) =>{\n        e.preventDefault()\n        setSubmitCount(submitCount + 1);\n\n        let blog = {title: title, body: body};\n\n        if (blogs !== null) {\n            const blogIds = Object.keys(blogs).map(key => parseInt(blogs[key].id.split(\"_\")[1]));\n            let count = blogIds.length;\n            blog.id = 'user1_' + (count + submitCount);\n        }\n\n        axios.post('http://localhost:8000/api/blog', blog)\n        .then((res) =>{\n            console.log(res);\n            if(res.status === 200){\n                navigate('/');\n            }\n        })\n    }\n\n    return ( \n         <div className=\"create\">\n            <h2>Add a New Blog</h2>\n            <form onSubmit={handleSubmit}>\n                <label>Blog title:</label>\n                <input\n                    type=\"text\"\n                    required\n                    value={title}\n                    onChange={(e) => setTitle(e.target.value)}\n                />\n                <label>Blog body:</label>\n                <textarea\n                    required\n                    value={body}\n                    onChange={(e) => setBody(e.target.value)}\n                ></textarea>\n                <button>Add Blog</button>\n            </form>\n        </div>\n        );\n    }\n\nexport default CreateBlog;","/Users/austo/Desktop/Creative/Web Development/FarmStackProject/frontend/src/BlogDetails.js",["52","53"],[],"import { useParams } from \"react-router-dom\";\nimport useFetch from \"./useFetch\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst BlogDetails = () => {\n\n  const { id } = useParams();\n  const { error, isPending, data: blog } = useFetch('http://localhost:8000/api/blog' + id);\n  const navigate = useNavigate();\n\n  const handleDelete = () =>{\n    axios.delete('http://localhost:8000/api/blog' + blog.id);\n    navigate(\"/\");\n  }\n\n\n  return (\n    <div className=\"blog-details\">\n      <h2>{blog && blog.title}</h2>\n      <p>{blog && blog.body}</p>\n      <button onClick={handleDelete}>Delete Blog</button>\n    </div>\n  );\n}\n \nexport default BlogDetails;",{"ruleId":"54","severity":1,"message":"55","line":6,"column":13,"nodeType":"56","messageId":"57","endLine":6,"endColumn":18},{"ruleId":"54","severity":1,"message":"58","line":6,"column":20,"nodeType":"56","messageId":"57","endLine":6,"endColumn":29},{"ruleId":"54","severity":1,"message":"59","line":2,"column":8,"nodeType":"56","messageId":"57","endLine":2,"endColumn":13},{"ruleId":"54","severity":1,"message":"60","line":11,"column":12,"nodeType":"56","messageId":"57","endLine":11,"endColumn":14},{"ruleId":"54","severity":1,"message":"61","line":11,"column":16,"nodeType":"56","messageId":"57","endLine":11,"endColumn":21},{"ruleId":"54","severity":1,"message":"55","line":9,"column":11,"nodeType":"56","messageId":"57","endLine":9,"endColumn":16},{"ruleId":"54","severity":1,"message":"58","line":9,"column":18,"nodeType":"56","messageId":"57","endLine":9,"endColumn":27},"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'isPending' is assigned a value but never used.","'axios' is defined but never used.","'id' is assigned a value but never used.","'setId' is assigned a value but never used."]